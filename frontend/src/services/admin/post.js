import axios from "axios";
import axiosClient from "../api";

export const postServices = {
  getAllPost: async () => {
    try {
      const res = await axiosClient.get("admin/posts");
      return res;
    } catch (error) {
      throw error?.response?.data || error;
    }
  },
  getAllcategory: async () => {
    try {
      const res = await axiosClient.get("client/category");
      return res;
    } catch (error) {
      throw error?.response?.data || error;
    }
  },
  getAlltags: async () => {
    try {
      const res = await axiosClient.get("client/tags");
      return res;
    } catch (error) {
      throw error?.response?.data || error;
    }
  },
  // x√≥a m·ªÅm b√†i vi·∫øt
  delete: async (id) => {
    try {
      const res = await axiosClient.delete(`/admin/posts/${id}`);
      console.log("üöÄ ~ res:", res);
    } catch (error) {
      throw error?.response?.data || error;
    }
  },
  createPost: async (formData) => {
    try {
      // --- B·∫ÆT ƒê·∫¶U: M√£ ƒë·ªÉ log n·ªôi dung FormData ---
      console.log("--- B·∫Øt ƒë·∫ßu duy·ªát FormData ---");

      // D√πng for...of v·ªõi formData.entries() ƒë·ªÉ l·∫•y c·∫£ key v√† value
      for (const [key, value] of formData.entries()) {
        console.log(`${key}:`, value);
      }

      console.log("--- K·∫øt th√∫c duy·ªát FormData ---");
      // Khi g·ª≠i FormData, Axios s·∫Ω t·ª± ƒë·ªông ƒë·∫∑t 'Content-Type': 'multipart/form-data'
      // v√† x·ª≠ l√Ω boundary.
      const res = await axiosClient.post("admin/posts", formData, {
        headers: {
          "Content-Type": undefined,
        },
      });
      return res.data;
    } catch (error) {
      throw error?.response?.data || error;
    }
  },
};
// Quay tr·ªü l·∫°i d√πng h√†m uploadImage g·ªëc c·ªßa b·∫°n
export async function uploadImage(blobInfo) {
  const formData = new FormData();
  formData.append("file", blobInfo.blob(), blobInfo.filename());

  try {
    //
    // G·ª≠i request v·ªõi m·ªôt config (tham s·ªë th·ª© 3) ƒê·ªÇ GHI ƒê√à
    //
    const response = await axiosClient.post(
      "/upload", // 1. URL
      formData, // 2. D·ªØ li·ªáu (body)
      {
        headers: {
          "Content-Type": undefined,
        },
      }
    );

    const data = response;
    if (!data || !data.location) {
      throw new Error("Upload ·∫£nh th·∫•t b·∫°i");
    }
    return data.location;
  } catch (error) {
    console.error("L·ªói upload ·∫£nh:", error);
    throw error;
  }
}
