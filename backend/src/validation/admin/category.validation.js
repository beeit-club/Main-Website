import * as yup from 'yup';

const CategorySchema = {
  // üü¢ Th√™m danh m·ª•c
  create: yup.object({
    name: yup
      .string()
      .trim()
      .required('T√™n danh m·ª•c l√† b·∫Øt bu·ªôc')
      .min(2, 'T√™n danh m·ª•c ph·∫£i c√≥ √≠t nh·∫•t 2 k√Ω t·ª±')
      .max(100, 'T√™n danh m·ª•c kh√¥ng ƒë∆∞·ª£c v∆∞·ª£t qu√° 100 k√Ω t·ª±'),
    parent_id: yup
      .number()
      .nullable()
      .transform((value, originalValue) =>
        String(originalValue).trim() === '' ? null : value,
      )
      .min(1, 'parent_id kh√¥ng h·ª£p l·ªá'),

    status: yup.number().oneOf([0, 1], 'Tr·∫°ng th√°i kh√¥ng h·ª£p l·ªá').default(1),
  }),

  // üü° C·∫≠p nh·∫≠t danh m·ª•c
  update: yup.object({
    name: yup
      .string()
      .trim()
      .min(2, 'T√™n danh m·ª•c ph·∫£i c√≥ √≠t nh·∫•t 2 k√Ω t·ª±')
      .max(100, 'T√™n danh m·ª•c kh√¥ng ƒë∆∞·ª£c v∆∞·ª£t qu√° 100 k√Ω t·ª±')
      .optional(),

    parent_id: yup
      .number()
      .nullable()
      .transform((value, originalValue) =>
        String(originalValue).trim() === '' ? null : value,
      )
      .min(1, 'parent_id kh√¥ng h·ª£p l·ªá')
      .optional(),

    status: yup.number().oneOf([0, 1], 'Tr·∫°ng th√°i kh√¥ng h·ª£p l·ªá').optional(),
  }),

  // üî¥ X√≥a danh m·ª•c
  delete: yup.object({
    id: yup
      .number()
      .required('ID danh m·ª•c l√† b·∫Øt bu·ªôc')
      .integer('ID ph·∫£i l√† s·ªë nguy√™n')
      .min(1, 'ID kh√¥ng h·ª£p l·ªá'),
  }),
};

export default CategorySchema;
